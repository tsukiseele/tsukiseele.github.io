/**
 * position: sticly 粘性布局在 flex box 内应用需要给
 * 父元素设置 overflow: visible; 保证内容可滚动。
 * 该元素设置 align-self: flex-start；使其高度变为 auto 。
 * （由于flex box元素默认为stretch，因此所有元素都具有相同的高度，无法滚动。）
 * 最后设置 top, right, bottom, left 其中之一才能正常工作。
 */

#main {
  display: flex;
  overflow: visible;
  padding: 1rem;
}

.aside {
  flex: 0 0 240px;
  width: 0;
  margin-right: 1rem;
  overflow: visible;
  >* {
    border-radius: .25rem;
    margin-bottom: 1rem;
  }
  .aside-static {
    >* {
      border-radius: .25rem;
      margin-bottom: 1rem;

    }
  }
  .aside-sticky {
    top: calc(var(--nav-height) + 1rem);
    position: sticky;
    >* {
      border-radius: .25rem;
      margin-bottom: 1rem;
    }
  }
}

.post {
  flex: 1;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;

  .post-item-wrap {
    margin-bottom: 1rem;
  }
}

.pagination {
  font-family: var(--font-coquettec);
}

@include screen-tablet {
  .aside {
    width: auto;
    flex: auto;
    align-self: stretch;
    margin-right: 0;

    .sticky {
      position: static;
    }
  }

  #main {
    flex-direction: column-reverse;
  }

  .post {
    flex: 1;
  }
}

.aside-static {
  position: relative;

  .aside-decorate {
    overflow: hidden;

    .decorate-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-family: var(--font-coquettec);
      font-size: 2rem;
      color: var(--color-text-primary);
    }

    .decorate-cover {
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: 1;
    }

    .decorate-burst-12 {
      $size: 10rem;
      $radius: 1rem;
      width: $size;
      height: $size;
      padding: 2rem;

      .burst-12 {
        position: relative;
        background-color: #f4d8e4;
        width: $size;
        height: $size;
        border-radius: $radius;
        margin: 0 auto;
      }

      .burst-12:before,
      .burst-12:after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: $size;
        height: $size;
        background: inherit;
        border-radius: $radius;
      }

      .burst-12:before {
        transform: rotate(30deg);
      }

      .burst-12:after {
        transform: rotate(60deg);
      }

      // .burst-12:nth-of-type(1),
      // .burst-12:nth-of-type(1):before,
      // .burst-12:nth-of-type(1):after {
      //   background-color: #e9cdd9;
      // }
      // .burst-12:nth-of-type(2),
      // .burst-12:nth-of-type(2):before,
      // .burst-12:nth-of-type(2):after {
      //   background-color: #c7b3d6;
      // }
      // .burst-12:nth-of-type(1) {
      //   transform: scale(0.5);
      //   background-color: #e9cdd9;
      // }
      // .burst-12:nth-of-type(2) {
      //   transform: scale(0.3);
      //   background-color: #c7b3d6;
      // }
      // .burst-12:nth-of-type(3) {
      //   transform: scale(0.7);
      //   background-color: #b7d7b6;
      // }
      // .burst-12:nth-of-type(4) {
      //   transform: scale(0.8);
      //   background-color: #8daacd;
      // }
      // .burst-12:nth-of-type(5) {
      //   transform: scale(0.6);
      //   background-color: #f7e4c6;
      // }
      // .burst-12:nth-of-type(6) {
      //   transform: scale(0.4);
      //   background-color: #81c8c0;
      // }
    }
  }
}